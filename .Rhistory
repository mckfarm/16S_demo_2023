ps_euk <- phyloseq::subset_taxa(ps, Genus == "Chloroplast" | Genus == "Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus == "Mitochondria")
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Genus != "Chloroplast" | Genus != "Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus = "Chloroplast" | Genus = "Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus == "Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus = "Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus=="Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus="Mitochondria")
View(ps_euk)
ps_euk <- phyloseq::subset_taxa(ps, Genus=="Mitochondria")
View(ps_euk)
ps_euk@tax_table
View(ps)
ps@tax_table
ps_euk <- phyloseq::subset_taxa(ps, !Genus=="Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus=="Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus==Chloroplast")
ps_euk <- phyloseq::subset_taxa(ps, Genus=="Chloroplast")
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./data/16S_metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Genus != "Chloroplast" | Genus != "Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Genus=="Mitochondria")
subset_taxa(ps, Genus=="Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Order=="Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Family=="Mitochondria")
View(ps_euk)
ps_euk@tax_table
ps_euk <- phyloseq::subset_taxa(ps, Family =! "Mitochondria" | Genus != "Chloroplast")
ps_euk <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Genus != "Chloroplast" | Genus != "Mitochondria")
ps_euk <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
View(ps_euk)
# remove Mitochondria and Chloroplasts
ps_euk <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# remove Mitochondria and Chloroplasts
ps_euk <- phyloseq::subset_taxa(ps, Family == "Mitochondria" | Family == "Chloroplast")
View(ps_euk)
ps_euk@tax_table
# remove Mitochondria and Chloroplasts
ps_euk <- phyloseq::subset_taxa(ps, Family == "Mitochondria" | Family == "Chloroplasts")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
View(ps_euk)
ps_euk@tax_table
# remove Mitochondria and Chloroplasts
ps_euk <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./data/16S_metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
taxonomy <- as.data.frame(as.matrix(ps@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
table_count <- as.data.frame(as.matrix(ps@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned" | Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned" | Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./data/16S_metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned" | Family != "Mitochondria" | Family != "Chloroplast")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, !Family %in% c("Mitochondria", "Chloroplast"))
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Family %in% !c("Mitochondria", "Chloroplast"))
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, Family %in% c("Mitochondria", "Chloroplast"))
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
View(ps_filt)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, ! Family %in% c("Mitochondria", "Chloroplast"))
View(ps_filt)
ps_filt@tax_table
ps_filt@otu_table
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, ! Family %in% c("Mitochondria", "Chloroplast"))
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
View(ps_rel)
ps_rel@tax_table
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./data/16S_metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, ! Family %in% c("Mitochondria", "Chloroplast"))
# remove unclassified sequences
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
taxonomy <- as.data.frame(as.matrix(ps_filt@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
table_count <- as.data.frame(as.matrix(ps_filt@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
# relative abundance table
table_rel <- table_count %>%
pivot_longer(cols = !seq, names_to = "sample_id", values_to = "rel_ab") %>%
left_join(metadata, join_by(sample_id)) %>%
left_join(taxonomy, join_by(seq))
# relative abundance table
table_rel <- table_count %>%
pivot_longer(cols = !seq, names_to = "sample_id", values_to = "rel_ab") %>%
left_join(taxonomy, join_by(seq))
View(table_rel)
# relative abundance table
table_count <- table_count %>%
pivot_longer(cols = !seq, names_to = "sample_id", values_to = "count") %>%
left_join(taxonomy, join_by(seq))
max(table_count$count)
table_rel <- table_rel %>%
pivot_longer(cols = !seq, names_to = "sample_id", values_to = "rel_ab") %>% # make a "long" dataframe
left_join(taxonomy, join_by(seq)) # join by the sequence ID
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./data/16S_metadata.txt"
)
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./data/16S_metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, ! Family %in% c("Mitochondria", "Chloroplast"))
# remove unclassified sequences
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
taxonomy <- as.data.frame(as.matrix(ps_filt@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
table_count <- as.data.frame(as.matrix(ps_filt@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
table_rel <- table_rel %>%
pivot_longer(cols = !seq, names_to = "sample_id", values_to = "rel_ab") %>% # make a "long" dataframe
left_join(taxonomy, join_by(seq)) # join by the sequence ID
View(table_rel)
View(ps)
ps@sam_data
table_rel %>% # perform some functions on table_rel
group_by(Genus, date, reactor) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and reactor
filter(Genus == "Zoogloea") %>% # only choose Zoogloea
ggplot(., aes(x=timepoint, y=sum_ab)) +
geom_point() +
geom_line()
View(table_rel)
View(taxonomy)
taxonomy <- as.data.frame(as.matrix(ps_filt@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
metadata <- as.data.frame(as.matrix(ps_filt@sam_data)) %>%
rownames_to_column(var = "seq")
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
View(metadata)
metadata <- as.data.frame(as.matrix(ps_filt@sam_data)) %>%
rownames_to_column(var = "sample")
taxonomy <- as.data.frame(as.matrix(ps_rel@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
metadata <- as.data.frame(as.matrix(ps_rel@sam_data)) %>%
rownames_to_column(var = "sample")
head(metadata)
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
table_rel <- table_rel %>%
pivot_longer(cols = !seq, names_to = "sample", values_to = "rel_ab") %>% # make a "long" dataframe
left_join(taxonomy, join_by(seq)) # join taxonomy by the sequence ID
taxonomy <- as.data.frame(as.matrix(ps_rel@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
metadata <- as.data.frame(as.matrix(ps_rel@sam_data)) %>%
rownames_to_column(var = "sample")
head(metadata)
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
table_rel <- table_rel %>%
pivot_longer(cols = !seq, names_to = "sample", values_to = "rel_ab") %>% # make a "long" dataframe
left_join(taxonomy, join_by(seq)) %>% # join taxonomy by the sequence ID
left_join(metadata, join_by(sample)) # join metadata by the sample ID
head(table_rel)
table_rel %>% # perform some functions on table_rel
group_by(Genus, date, reactor) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and reactor
filter(Genus == "Zoogloea") %>% # only choose Zoogloea
ggplot(., aes(x=timepoint, y=sum_ab)) +
geom_point() +
geom_line()
View(metadata)
table_rel %>% # perform some functions on table_rel
group_by(Genus, date, location) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea") %>% # only choose Zoogloea
ggplot(., aes(x=timepoint, y=sum_ab)) +
geom_point() +
geom_line()
table_rel %>% # perform some functions on table_rel
group_by(Genus, date, location) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea")
table_rel %>% # perform some functions on table_rel
group_by(Genus) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea")
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea")
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea") # only look at the genus Zoogloea
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>% # pipe into ggplot
ggplot2(., aes(x = timepoint, y = sum_ab)) +
geom_point()
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>% # pipe into ggplot
ggplot(., aes(x = timepoint, y = sum_ab)) +
geom_point()
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>% # pipe into ggplot
ggplot(., aes(x = timepoint, y = sum_ab, color = location)) + # add in the color by location
geom_point()
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea") %>% # only look at the genus Zoogloea
ungroup(Genus, timepoint, location) # we don't need these variables grouped anymore, so let's remove the grouping
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea") %>% # only look at the genus Zoogloea
mutate(timepoint = as.numeric(timepoint)) # make sure the timepoint column is a numeric, not character
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>% # pipe into ggplot
ggplot(., aes(x = timepoint, y = sum_ab)) + # the period denotes that we want to use the data we piped in
geom_point()
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>% # pipe into ggplot
ggplot(., aes(x = timepoint, y = sum_ab, color = location)) + # add in the color by location
geom_point()
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>%
mutate(timepoint = as.numeric(timepoint))
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>%
mutate(timepoint = as.numeric(timepoint)) %>% # pipe the data into the next line
ggplot(., aes(x = timepoint, y = sum_ab)) + # the period denotes that we want to use the data we piped in
geom_point()
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>% # pipe into ggplot
ggplot(., aes(x = timepoint, y = sum_ab, color = location)) + # add in the color by location
geom_point()
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>%
mutate(timepoint = as.numeric(timepoint)) %>% # pipe the data into the next line
ggplot(., aes(x = timepoint, y = sum_ab, color = location)) + # add color to the aesthetics
geom_point()
install.packages("tidyverse")
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./resources/metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, ! Family %in% c("Mitochondria", "Chloroplast"))
# remove unclassified sequences
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./resources/metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, ! Family %in% c("Mitochondria", "Chloroplast"))
# remove unclassified sequences
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
taxonomy <- as.data.frame(as.matrix(ps_rel@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
metadata <- as.data.frame(as.matrix(ps_rel@sam_data)) %>%
rownames_to_column(var = "sample")
head(metadata)
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_count)
taxonomy <- as.data.frame(as.matrix(ps_rel@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
metadata <- as.data.frame(as.matrix(ps_rel@sam_data)) %>%
rownames_to_column(var = "sample")
head(metadata)
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_rel)
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./resources/metadata.txt"
)
# remove Mitochondria and Chloroplasts
ps_filt <- phyloseq::subset_taxa(ps, ! Family %in% c("Mitochondria", "Chloroplast"))
# remove unclassified sequences
ps_filt <- phyloseq::subset_taxa(ps, Kingdom != "Unassigned")
# relative abundance
ps_rel <- phyloseq::transform_sample_counts(ps_filt, function(x) x*100/sum(x))
taxonomy <- as.data.frame(as.matrix(ps_rel@tax_table)) %>%
rownames_to_column(var = "seq") # change the ASV ID to a column, not a row name
head(taxonomy)
metadata <- as.data.frame(as.matrix(ps_rel@sam_data)) %>%
rownames_to_column(var = "sample")
head(metadata)
table_rel <- as.data.frame(as.matrix(ps_rel@otu_table)) %>%
rownames_to_column(var = "seq")
head(table_rel)
table_rel <- table_rel %>%
pivot_longer(cols = !seq, names_to = "sample", values_to = "rel_ab") %>% # make a "long" dataframe
left_join(taxonomy, join_by(seq)) %>% # join taxonomy by the sequence ID
left_join(metadata, join_by(sample)) # join metadata by the sample ID
head(table_rel)
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>% # group at the genus level, we will use this to sum up everything that has the same genus (ignore species)
summarise(sum_ab = sum(rel_ab)) %>% # sum up the relative abundance of each unique Genus at each unique combination of date and location
filter(Genus == "Zoogloea")
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>%
mutate(timepoint = as.numeric(timepoint)) # save timepoint to a numeric class
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>%
mutate(timepoint = as.numeric(timepoint)) %>% # pipe the data into the next line
ggplot(., aes(x = timepoint, y = sum_ab)) + # the period denotes that we want to use the data we piped in
geom_point()
table_rel %>% # perform some functions on table_rel
group_by(Genus, timepoint, location) %>%
summarise(sum_ab = sum(rel_ab)) %>%
filter(Genus == "Zoogloea") %>%
mutate(timepoint = as.numeric(timepoint)) %>% # pipe the data into the next line
ggplot(., aes(x = timepoint, y = sum_ab, color = location)) + # add color to the aesthetics
geom_point()
getwd()
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./resources/metadata.txt"
)
getwd()
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./resources/metadata.txt"
)
# required
library(qiime2R)
library(phyloseq)
library(tidyverse)
# optional
library(MetBrewer) # fun color palettes
getwd()
ps <- qiime2R::qza_to_phyloseq(
features="./data/table_dada2.qza",
tree="./data/rooted_tree.qza",
taxonomy="./data/taxonomy.qza",
metadata = "./resources/metadata.txt"
)
here()
library(here)
install.packages("here")
library(here)
here()
